{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\chatproject\\\\Beyond_Imagination\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Client } from \"@stomp/stompjs\";\nimport SockJS from \"sockjs-client\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet stompClient = null;\nconst App = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [userInput, setUserInput] = useState(\"\");\n  const [isConnected, setIsConnected] = useState(false);\n  const userName = \"익명\"; // 기본 사용자 이름 설정\n\n  const connect = () => {\n    console.log(\"Connecting...\");\n    stompClient = new Client({\n      brokerURL: \"ws://localhost:8080/chat\",\n      onConnect: () => {\n        console.log(\"Connected to WebSocket server!\");\n        setIsConnected(true);\n        stompClient.subscribe(\"/topic/messages\", message => {\n          const parsedMessage = JSON.parse(message.body);\n          setMessages(prevMessages => [...prevMessages, parsedMessage]);\n        });\n      },\n      onStompError: error => {\n        console.error(\"STOMP error:\", error);\n      }\n    });\n\n    // WebSocket 지원이 없는 경우 SockJS 사용\n    stompClient.webSocketFactory = () => new SockJS(\"http://localhost:8080/chat\");\n    stompClient.activate();\n  };\n  const sendMessage = () => {\n    if (userInput.trim() && stompClient) {\n      const chatMessage = {\n        sender: userName,\n        content: userInput\n      };\n      stompClient.publish({\n        destination: \"/app/sendMessage\",\n        body: JSON.stringify(chatMessage)\n      });\n      setUserInput(\"\");\n    }\n  };\n  useEffect(() => {\n    connect(); // 컴포넌트가 로드될 때 자동으로 연결\n    return () => {\n      if (stompClient) {\n        stompClient.deactivate();\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uC2E4\\uC2DC\\uAC04 \\uCC44\\uD305\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), isConnected ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-messages\",\n          children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${msg.sender === userName ? \"own\" : \"\"}`,\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [msg.sender, \": \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this), msg.content]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"\\uBA54\\uC2DC\\uC9C0\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n            value: userInput,\n            onChange: e => setUserInput(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: sendMessage,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uCC44\\uD305 \\uC11C\\uBC84\\uC5D0 \\uC5F0\\uACB0\\uC911...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"a+1LK2EbHxW5Bx8dqbuT1/6M0U4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Client","SockJS","jsxDEV","_jsxDEV","Fragment","_Fragment","stompClient","App","_s","messages","setMessages","userInput","setUserInput","isConnected","setIsConnected","userName","connect","console","log","brokerURL","onConnect","subscribe","message","parsedMessage","JSON","parse","body","prevMessages","onStompError","error","webSocketFactory","activate","sendMessage","trim","chatMessage","sender","content","publish","destination","stringify","deactivate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/chatproject/Beyond_Imagination/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Client } from \"@stomp/stompjs\";\nimport SockJS from \"sockjs-client\";\nimport \"./App.css\";\n\nlet stompClient = null;\n\nconst App = () => {\n  const [messages, setMessages] = useState([]);\n  const [userInput, setUserInput] = useState(\"\");\n  const [isConnected, setIsConnected] = useState(false);\n\n  const userName = \"익명\"; // 기본 사용자 이름 설정\n\n  const connect = () => {\n    console.log(\"Connecting...\");\n    stompClient = new Client({\n      brokerURL: \"ws://localhost:8080/chat\",\n      onConnect: () => {\n        console.log(\"Connected to WebSocket server!\");\n        setIsConnected(true);\n\n        stompClient.subscribe(\"/topic/messages\", (message) => {\n          const parsedMessage = JSON.parse(message.body);\n          setMessages((prevMessages) => [...prevMessages, parsedMessage]);\n        });\n      },\n      onStompError: (error) => {\n        console.error(\"STOMP error:\", error);\n      },\n    });\n\n    // WebSocket 지원이 없는 경우 SockJS 사용\n    stompClient.webSocketFactory = () =>\n      new SockJS(\"http://localhost:8080/chat\");\n\n    stompClient.activate();\n  };\n\n  const sendMessage = () => {\n    if (userInput.trim() && stompClient) {\n      const chatMessage = {\n        sender: userName,\n        content: userInput,\n      };\n      stompClient.publish({\n        destination: \"/app/sendMessage\",\n        body: JSON.stringify(chatMessage),\n      });\n      setUserInput(\"\");\n    }\n  };\n\n  useEffect(() => {\n    connect(); // 컴포넌트가 로드될 때 자동으로 연결\n    return () => {\n      if (stompClient) {\n        stompClient.deactivate();\n      }\n    };\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"chat-container\">\n        <h1>실시간 채팅</h1>\n        {isConnected ? (\n          <>\n            <div className=\"chat-messages\">\n              {messages.map((msg, index) => (\n                <div\n                  key={index}\n                  className={`message ${msg.sender === userName ? \"own\" : \"\"}`}\n                >\n                  <strong>{msg.sender}: </strong>\n                  {msg.content}\n                </div>\n              ))}\n            </div>\n            <div className=\"chat-input\">\n              <input\n                type=\"text\"\n                placeholder=\"메시지를 입력하세요\"\n                value={userInput}\n                onChange={(e) => setUserInput(e.target.value)}\n              />\n              <button onClick={sendMessage}>Send</button>\n            </div>\n          </>\n        ) : (\n          <p>채팅 서버에 연결중...</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,gBAAgB;AACvC,OAAOC,MAAM,MAAM,eAAe;AAClC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnB,IAAIC,WAAW,GAAG,IAAI;AAEtB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMiB,QAAQ,GAAG,IAAI,CAAC,CAAC;;EAEvB,MAAMC,OAAO,GAAGA,CAAA,KAAM;IACpBC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;IAC5BZ,WAAW,GAAG,IAAIN,MAAM,CAAC;MACvBmB,SAAS,EAAE,0BAA0B;MACrCC,SAAS,EAAEA,CAAA,KAAM;QACfH,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;QAC7CJ,cAAc,CAAC,IAAI,CAAC;QAEpBR,WAAW,CAACe,SAAS,CAAC,iBAAiB,EAAGC,OAAO,IAAK;UACpD,MAAMC,aAAa,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,CAACI,IAAI,CAAC;UAC9ChB,WAAW,CAAEiB,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAEJ,aAAa,CAAC,CAAC;QACjE,CAAC,CAAC;MACJ,CAAC;MACDK,YAAY,EAAGC,KAAK,IAAK;QACvBZ,OAAO,CAACY,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACtC;IACF,CAAC,CAAC;;IAEF;IACAvB,WAAW,CAACwB,gBAAgB,GAAG,MAC7B,IAAI7B,MAAM,CAAC,4BAA4B,CAAC;IAE1CK,WAAW,CAACyB,QAAQ,CAAC,CAAC;EACxB,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIrB,SAAS,CAACsB,IAAI,CAAC,CAAC,IAAI3B,WAAW,EAAE;MACnC,MAAM4B,WAAW,GAAG;QAClBC,MAAM,EAAEpB,QAAQ;QAChBqB,OAAO,EAAEzB;MACX,CAAC;MACDL,WAAW,CAAC+B,OAAO,CAAC;QAClBC,WAAW,EAAE,kBAAkB;QAC/BZ,IAAI,EAAEF,IAAI,CAACe,SAAS,CAACL,WAAW;MAClC,CAAC,CAAC;MACFtB,YAAY,CAAC,EAAE,CAAC;IAClB;EACF,CAAC;EAEDb,SAAS,CAAC,MAAM;IACdiB,OAAO,CAAC,CAAC,CAAC,CAAC;IACX,OAAO,MAAM;MACX,IAAIV,WAAW,EAAE;QACfA,WAAW,CAACkC,UAAU,CAAC,CAAC;MAC1B;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACErC,OAAA;IAAKsC,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBvC,OAAA;MAAKsC,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7BvC,OAAA;QAAAuC,QAAA,EAAI;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACdjC,WAAW,gBACVV,OAAA,CAAAE,SAAA;QAAAqC,QAAA,gBACEvC,OAAA;UAAKsC,SAAS,EAAC,eAAe;UAAAC,QAAA,EAC3BjC,QAAQ,CAACsC,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACvB9C,OAAA;YAEEsC,SAAS,EAAE,WAAWO,GAAG,CAACb,MAAM,KAAKpB,QAAQ,GAAG,KAAK,GAAG,EAAE,EAAG;YAAA2B,QAAA,gBAE7DvC,OAAA;cAAAuC,QAAA,GAASM,GAAG,CAACb,MAAM,EAAC,IAAE;YAAA;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EAC9BE,GAAG,CAACZ,OAAO;UAAA,GAJPa,KAAK;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAKP,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACN3C,OAAA;UAAKsC,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzBvC,OAAA;YACE+C,IAAI,EAAC,MAAM;YACXC,WAAW,EAAC,yDAAY;YACxBC,KAAK,EAAEzC,SAAU;YACjB0C,QAAQ,EAAGC,CAAC,IAAK1C,YAAY,CAAC0C,CAAC,CAACC,MAAM,CAACH,KAAK;UAAE;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/C,CAAC,eACF3C,OAAA;YAAQqD,OAAO,EAAExB,WAAY;YAAAU,QAAA,EAAC;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxC,CAAC;MAAA,eACN,CAAC,gBAEH3C,OAAA;QAAAuC,QAAA,EAAG;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CACpB;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACtC,EAAA,CAxFID,GAAG;AAAAkD,EAAA,GAAHlD,GAAG;AA0FT,eAAeA,GAAG;AAAC,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}